[DynamicMappings] Minecraft version: 16w32a
[DynamicMappings] Minecraft jar type: client

CLASSES:
net/minecraft/block/Block -> akw
net/minecraft/block/BlockChest -> ali
net/minecraft/block/BlockContainer -> akq
net/minecraft/block/BlockFire -> amp
net/minecraft/block/BlockGrass -> amz
net/minecraft/block/BlockHopper -> anj
net/minecraft/block/BlockLeaves -> anp
net/minecraft/block/BlockSlab -> and
net/minecraft/block/IGrowable -> akz
net/minecraft/block/ITileEntityProvider -> amk
net/minecraft/block/properties/IProperty -> asz
net/minecraft/block/state/BlockState -> ask
net/minecraft/block/state/IBlockEvents -> ash
net/minecraft/block/state/IBlockState -> asj
net/minecraft/block/state/IBlockWrapper -> asi
net/minecraft/client/Minecraft -> bdo
net/minecraft/client/gui/Gui -> bee
net/minecraft/client/gui/GuiIngame -> bed
net/minecraft/client/gui/GuiMainMenu -> bgr
net/minecraft/client/gui/GuiScreen -> bgk
net/minecraft/client/gui/GuiYesNoCallback -> bfp
net/minecraft/client/main/GameConfiguration -> bjk
net/minecraft/client/main/Main -> net/minecraft/client/main/Main
net/minecraft/client/multiplayer/GuiConnecting -> bfr
net/minecraft/client/multiplayer/WorldClient -> bme
net/minecraft/client/renderer/BlockModelShapes -> bpl
net/minecraft/client/renderer/BlockRendererDispatcher -> bpm
net/minecraft/client/renderer/ItemModelMesher -> bov
net/minecraft/client/renderer/RenderGlobal -> boy
net/minecraft/client/renderer/WorldRenderer -> bok
net/minecraft/client/renderer/entity/RenderItem -> bto
net/minecraft/client/renderer/texture/TextureAtlasSprite -> bxb
net/minecraft/client/renderer/texture/TextureMap -> bxa
net/minecraft/client/renderer/vertex/VertexFormat -> bxl
net/minecraft/client/resources/model/ModelResourceLocation -> bzo
net/minecraft/command/CommandException -> cc
net/minecraft/command/CommandHandler -> k
net/minecraft/command/ICommand -> l
net/minecraft/command/ICommandManager -> m
net/minecraft/command/ICommandSender -> n
net/minecraft/command/ServerCommandManager -> bc
net/minecraft/creativetab/CreativeTabs -> adq
net/minecraft/entity/Entity -> se
net/minecraft/entity/EntityList -> sg
net/minecraft/entity/EntityLivingBase -> sn
net/minecraft/entity/item/EntityItem -> yy
net/minecraft/entity/player/EntityPlayer -> aak
net/minecraft/entity/player/EntityPlayerMP -> lw
net/minecraft/init/Blocks -> akx
net/minecraft/item/Item -> aeo
net/minecraft/item/ItemAxe -> acz
net/minecraft/item/ItemBanner -> ada
net/minecraft/item/ItemBow -> adh
net/minecraft/item/ItemDye -> adu
net/minecraft/item/ItemPickaxe -> afb
net/minecraft/item/ItemRecord -> aff
net/minecraft/item/ItemSoup -> adi
net/minecraft/item/ItemStack -> aeq
net/minecraft/item/ItemSword -> afx
net/minecraft/item/ItemTool -> adr
net/minecraft/item/state/IItemState -> aer
net/minecraft/nbt/NBTBase -> eh
net/minecraft/nbt/NBTPrimitive -> ee
net/minecraft/nbt/NBTTagByte -> ds
net/minecraft/nbt/NBTTagByteArray -> dr
net/minecraft/nbt/NBTTagCompound -> dt
net/minecraft/nbt/NBTTagDouble -> du
net/minecraft/nbt/NBTTagEnd -> dv
net/minecraft/nbt/NBTTagFloat -> dw
net/minecraft/nbt/NBTTagInt -> dy
net/minecraft/nbt/NBTTagIntArray -> dx
net/minecraft/nbt/NBTTagList -> dz
net/minecraft/nbt/NBTTagLong -> ea
net/minecraft/nbt/NBTTagShort -> ef
net/minecraft/nbt/NBTTagString -> eg
net/minecraft/network/NetworkSystem -> mf
net/minecraft/server/MinecraftServer -> net/minecraft/server/MinecraftServer
net/minecraft/server/integrated/IntegratedServer -> caj
net/minecraft/server/management/PlayerProfileCache -> mn
net/minecraft/util/BlockPos -> cn
net/minecraft/util/ChatComponentText -> fg
net/minecraft/util/DataVersionManager -> pf
net/minecraft/util/EnumWorldBlockLayer -> aim
net/minecraft/util/IThreadListener -> qp
net/minecraft/util/MovingObjectPosition -> bcq
net/minecraft/util/RegistryNamespaced -> db
net/minecraft/util/ResourceLocation -> kp
net/minecraft/util/Sound -> nk
net/minecraft/world/IBlockAccess -> aiy
net/minecraft/world/World -> aiu
net/minecraft/world/WorldServer -> lu
net/minecraft/world/WorldSettings -> aix
net/minecraft/world/WorldType -> aiz

FIELDS:
net/minecraft/client/Minecraft theWorld Lnet/minecraft/client/multiplayer/WorldClient; -> bdo f Lbme;
net/minecraft/client/renderer/BlockRendererDispatcher blockModelShapes Lnet/minecraft/client/renderer/BlockModelShapes; -> bpm a Lbpl;
net/minecraft/client/renderer/texture/TextureAtlasSprite framesTextureData Ljava/util/List; -> bxb a Ljava/util/List;
net/minecraft/client/renderer/texture/TextureAtlasSprite height I -> bxb g I
net/minecraft/client/renderer/texture/TextureAtlasSprite iconName Ljava/lang/String; -> bxb j Ljava/lang/String;
net/minecraft/client/renderer/texture/TextureAtlasSprite maxU F -> bxb m F
net/minecraft/client/renderer/texture/TextureAtlasSprite maxV F -> bxb o F
net/minecraft/client/renderer/texture/TextureAtlasSprite minU F -> bxb l F
net/minecraft/client/renderer/texture/TextureAtlasSprite minV F -> bxb n F
net/minecraft/client/renderer/texture/TextureAtlasSprite originX I -> bxb d I
net/minecraft/client/renderer/texture/TextureAtlasSprite originY I -> bxb e I
net/minecraft/client/renderer/texture/TextureAtlasSprite rotated Z -> bxb c Z
net/minecraft/client/renderer/texture/TextureAtlasSprite width I -> bxb f I
net/minecraft/creativetab/CreativeTabs tabAllSearch Lnet/minecraft/creativetab/CreativeTabs; -> adq g Ladq;
net/minecraft/creativetab/CreativeTabs tabBlock Lnet/minecraft/creativetab/CreativeTabs; -> adq b Ladq;
net/minecraft/creativetab/CreativeTabs tabBrewing Lnet/minecraft/creativetab/CreativeTabs; -> adq k Ladq;
net/minecraft/creativetab/CreativeTabs tabCombat Lnet/minecraft/creativetab/CreativeTabs; -> adq j Ladq;
net/minecraft/creativetab/CreativeTabs tabDecorations Lnet/minecraft/creativetab/CreativeTabs; -> adq c Ladq;
net/minecraft/creativetab/CreativeTabs tabFood Lnet/minecraft/creativetab/CreativeTabs; -> adq h Ladq;
net/minecraft/creativetab/CreativeTabs tabInventory Lnet/minecraft/creativetab/CreativeTabs; -> adq m Ladq;
net/minecraft/creativetab/CreativeTabs tabMaterials Lnet/minecraft/creativetab/CreativeTabs; -> adq l Ladq;
net/minecraft/creativetab/CreativeTabs tabMisc Lnet/minecraft/creativetab/CreativeTabs; -> adq f Ladq;
net/minecraft/creativetab/CreativeTabs tabRedstone Lnet/minecraft/creativetab/CreativeTabs; -> adq d Ladq;
net/minecraft/creativetab/CreativeTabs tabTools Lnet/minecraft/creativetab/CreativeTabs; -> adq i Ladq;
net/minecraft/creativetab/CreativeTabs tabTransport Lnet/minecraft/creativetab/CreativeTabs; -> adq e Ladq;
net/minecraft/init/Blocks air Lnet/minecraft/block/Block; -> akx a Lakw;
net/minecraft/init/Blocks bedrock Lnet/minecraft/block/Block; -> akx h Lakw;
net/minecraft/init/Blocks chest Lnet/minecraft/block/BlockChest; -> akx ae Lali;
net/minecraft/init/Blocks cobblestone Lnet/minecraft/block/Block; -> akx e Lakw;
net/minecraft/init/Blocks dirt Lnet/minecraft/block/Block; -> akx d Lakw;
net/minecraft/init/Blocks glass_pane Lnet/minecraft/block/Block; -> akx bj Lakw;
net/minecraft/init/Blocks grass Lnet/minecraft/block/BlockGrass; -> akx c Lamz;
net/minecraft/init/Blocks hopper Lnet/minecraft/block/BlockHopper; -> akx cp Lanj;
net/minecraft/init/Blocks iron_block Lnet/minecraft/block/Block; -> akx S Lakw;
net/minecraft/init/Blocks obsidian Lnet/minecraft/block/Block; -> akx Z Lakw;
net/minecraft/init/Blocks planks Lnet/minecraft/block/Block; -> akx f Lakw;
net/minecraft/init/Blocks sapling Lnet/minecraft/block/Block; -> akx g Lakw;
net/minecraft/init/Blocks stone Lnet/minecraft/block/Block; -> akx b Lakw;
net/minecraft/item/Item itemRegistry Lnet/minecraft/util/RegistryNamespaced; -> aeo g Ldb;
net/minecraft/item/Item maxDamage I -> aeo o I
net/minecraft/item/Item maxStackSize I -> aeo k I
net/minecraft/item/ItemPickaxe EFFECTIVE_ON Ljava/util/Set; -> afb e Ljava/util/Set;
net/minecraft/item/ItemTool efficiencyOnProperMaterial F -> adr a F
net/minecraft/nbt/NBTTagList tagType B -> dz d B
net/minecraft/util/EnumWorldBlockLayer CUTOUT Lnet/minecraft/util/EnumWorldBlockLayer; -> aim c Laim;
net/minecraft/util/EnumWorldBlockLayer CUTOUT_MIPPED Lnet/minecraft/util/EnumWorldBlockLayer; -> aim b Laim;
net/minecraft/util/EnumWorldBlockLayer SOLID Lnet/minecraft/util/EnumWorldBlockLayer; -> aim a Laim;
net/minecraft/util/EnumWorldBlockLayer TRANSLUCENT Lnet/minecraft/util/EnumWorldBlockLayer; -> aim d Laim;

METHODS:
net/minecraft/block/Block isOpaqueCube (Lnet/minecraft/block/state/IBlockState;)Z -> akw b (Lasj;)Z
net/minecraft/block/Block isVisuallyOpaque ()Z -> akw j ()Z
net/minecraft/block/Block setTickRandomly (Z)Lnet/minecraft/block/Block; -> akw a (Z)Lakw;
net/minecraft/block/Block spawnAsEntity (Lnet/minecraft/world/World;Lnet/minecraft/util/BlockPos;Lnet/minecraft/item/ItemStack;)V -> akw a (Laiu;Lcn;Laeq;)V
net/minecraft/block/IGrowable canGrow (Lnet/minecraft/world/World;Lnet/minecraft/util/BlockPos;Lnet/minecraft/block/state/IBlockState;Z)Z -> akz a (Laiu;Lcn;Lasj;Z)Z
net/minecraft/block/IGrowable canUseBonemeal (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/BlockPos;Lnet/minecraft/block/state/IBlockState;)Z -> akz a (Laiu;Ljava/util/Random;Lcn;Lasj;)Z
net/minecraft/block/IGrowable grow (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/BlockPos;Lnet/minecraft/block/state/IBlockState;)V -> akz b (Laiu;Ljava/util/Random;Lcn;Lasj;)V
net/minecraft/block/state/BlockState getAllowedValues ()Ljava/util/List; -> ask e ()Ljava/util/List;
net/minecraft/block/state/BlockState getBaseState ()Lnet/minecraft/block/state/IBlockState; -> ask b ()Lasj;
net/minecraft/block/state/BlockState getBlock ()Lnet/minecraft/block/Block; -> ask c ()Lakw;
net/minecraft/block/state/BlockState getProperties ()Ljava/util/Collection; -> ask d ()Ljava/util/Collection;
net/minecraft/block/state/BlockState getProperty (Ljava/lang/String;)Lnet/minecraft/block/properties/IProperty; -> ask a (Ljava/lang/String;)Lasz;
net/minecraft/block/state/BlockState getPropertyValue (Lnet/minecraft/block/Block;Lnet/minecraft/block/properties/IProperty;)Ljava/lang/String; -> ask a (Lakw;Lasz;)Ljava/lang/String;
net/minecraft/block/state/BlockState getValidStates ()Lcom/google/common/collect/ImmutableList; -> ask a ()Lcom/google/common/collect/ImmutableList;
net/minecraft/block/state/IBlockEvents onBlockEventReceived (Lnet/minecraft/world/World;Lnet/minecraft/util/BlockPos;II)Z -> ash a (Laiu;Lcn;II)Z
net/minecraft/block/state/IBlockEvents onNeighborBlockChange (Lnet/minecraft/world/World;Lnet/minecraft/util/BlockPos;Lnet/minecraft/block/Block)V -> ash a (Laiu;Lcn;Lakw;)V
net/minecraft/block/state/IBlockState cycleProperty (Lnet/minecraft/block/properties/IProperty;)Lnet/minecraft/block/state/IBlockState; -> asj a (Lasz;)Lasj;
net/minecraft/block/state/IBlockState getBlock ()Lnet/minecraft/block/Block; -> asj t ()Lakw;
net/minecraft/block/state/IBlockState getProperties ()Lcom/google/common/collect/ImmutableMap; -> asj s ()Lcom/google/common/collect/ImmutableMap;
net/minecraft/block/state/IBlockState getPropertyNames ()Ljava/util/Collection; -> asj r ()Ljava/util/Collection;
net/minecraft/block/state/IBlockState getValue (Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable; -> asj c (Lasz;)Ljava/lang/Comparable;
net/minecraft/block/state/IBlockState withProperty (Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState; -> asj a (Lasz;Ljava/lang/Comparable;)Lasj;
net/minecraft/client/Minecraft getBlockRendererDispatcher ()Lnet/minecraft/client/renderer/BlockRendererDispatcher; -> bdo ab ()Lbpm;
net/minecraft/client/Minecraft getIntegratedServer ()Lnet/minecraft/server/integrated/IntegratedServer; -> bdo F ()Lcaj;
net/minecraft/client/Minecraft getMinecraft ()Lnet/minecraft/client/Minecraft; -> bdo z ()Lbdo;
net/minecraft/client/Minecraft getRenderItem ()Lnet/minecraft/client/renderer/entity/RenderItem; -> bdo ad ()Lbto;
net/minecraft/client/Minecraft getTextureMapBlocks ()Lnet/minecraft/client/renderer/texture/TextureMap; -> bdo R ()Lbxa;
net/minecraft/client/Minecraft launchIntegratedServer (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/WorldSettings;)V -> bdo a (Ljava/lang/String;Ljava/lang/String;Laix;)V
net/minecraft/client/Minecraft refreshResources ()V -> bdo f ()V
net/minecraft/client/Minecraft startGame ()V -> bdo an ()V
net/minecraft/client/renderer/BlockRendererDispatcher getBlockModelShapes ()Lnet/minecraft/client/renderer/BlockModelShapes; -> bpm a ()Lbpl;
net/minecraft/client/renderer/BlockRendererDispatcher renderBlock (Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/util/BlockPos;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/client/renderer/WorldRenderer;)Z -> bpm a (Lasj;Lcn;Laiy;Lbok;)Z
net/minecraft/client/renderer/ItemModelMesher register (Lnet/minecraft/item/Item;ILnet/minecraft/client/resources/model/ModelResourceLocation;)V -> bov a (Laeo;ILbzo;)V
net/minecraft/client/renderer/RenderGlobal renderBlockLayer (Lnet/minecraft/util/EnumWorldBlockLayer;)V -> boy a (Laim;)V
net/minecraft/client/renderer/WorldRenderer addVertex (DDD)Lnet/minecraft/client/renderer/WorldRenderer; -> bok b (DDD)Lbok;
net/minecraft/client/renderer/WorldRenderer endVertex ()V -> bok d ()V
net/minecraft/client/renderer/WorldRenderer finishDrawing ()V -> bok e ()V
net/minecraft/client/renderer/WorldRenderer getByteBuffer ()Ljava/nio/ByteBuffer; -> bok f ()Ljava/nio/ByteBuffer;
net/minecraft/client/renderer/WorldRenderer getDrawMode ()I -> bok i ()I
net/minecraft/client/renderer/WorldRenderer getVertexCount ()I -> bok h ()I
net/minecraft/client/renderer/WorldRenderer markDirty ()V -> bok c ()V
net/minecraft/client/renderer/WorldRenderer postNormal (FFF)V -> bok b (FFF)V
net/minecraft/client/renderer/WorldRenderer putBrightness4 (IIII)V -> bok a (IIII)V
net/minecraft/client/renderer/WorldRenderer putBulkData ([I)V -> bok a ([I)V
net/minecraft/client/renderer/WorldRenderer putColor4 (I)V -> bok a (I)V
net/minecraft/client/renderer/WorldRenderer putColorMultiplier (FFFI)V -> bok a (FFFI)V
net/minecraft/client/renderer/WorldRenderer putColorRGB_F (FFFI)V -> bok b (FFFI)V
net/minecraft/client/renderer/WorldRenderer putColorRGB_F4 (FFF)V -> bok d (FFF)V
net/minecraft/client/renderer/WorldRenderer putPosition (DDD)V -> bok a (DDD)V
net/minecraft/client/renderer/WorldRenderer reset ()V -> bok b ()V
net/minecraft/client/renderer/WorldRenderer setBrightness (II)Lnet/minecraft/client/renderer/WorldRenderer; -> bok a (II)Lbok;
net/minecraft/client/renderer/WorldRenderer setColorRGBA (IIII)Lnet/minecraft/client/renderer/WorldRenderer; -> bok b (IIII)Lbok;
net/minecraft/client/renderer/WorldRenderer setColorRGBA_F (FFFF)Lnet/minecraft/client/renderer/WorldRenderer; -> bok a (FFFF)Lbok;
net/minecraft/client/renderer/WorldRenderer setNormal (FFF)Lnet/minecraft/client/renderer/WorldRenderer; -> bok c (FFF)Lbok;
net/minecraft/client/renderer/WorldRenderer setTextureUV (DD)Lnet/minecraft/client/renderer/WorldRenderer; -> bok a (DD)Lbok;
net/minecraft/client/renderer/WorldRenderer setTranslation (DDD)V -> bok c (DDD)V
net/minecraft/client/renderer/WorldRenderer sortQuads (FFF)V -> bok a (FFF)V
net/minecraft/client/renderer/WorldRenderer startDrawing (ILnet/minecraft/client/renderer/vertex/VertexFormat;)V -> bok a (ILbxl;)V
net/minecraft/client/renderer/entity/RenderItem getItemModelMesher ()Lnet/minecraft/client/renderer/ItemModelMesher; -> bto a ()Lbov;
net/minecraft/client/renderer/texture/TextureAtlasSprite getIconName ()Ljava/lang/String; -> bxb i ()Ljava/lang/String;
net/minecraft/client/renderer/texture/TextureAtlasSprite getInterpolatedU (D)F -> bxb a (D)F
net/minecraft/client/renderer/texture/TextureAtlasSprite getInterpolatedV (D)F -> bxb b (D)F
net/minecraft/client/renderer/texture/TextureAtlasSprite getMaxU ()F -> bxb f ()F
net/minecraft/client/renderer/texture/TextureAtlasSprite getMaxV ()F -> bxb h ()F
net/minecraft/client/renderer/texture/TextureAtlasSprite getMinU ()F -> bxb e ()F
net/minecraft/client/renderer/texture/TextureAtlasSprite getMinV ()F -> bxb g ()F
net/minecraft/client/renderer/texture/TextureMap getAtlasSprite (Ljava/lang/String;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; -> bxa a (Ljava/lang/String;)Lbxb;
net/minecraft/command/CommandHandler registerCommand (Lnet/minecraft/command/ICommand;)Lnet/minecraft/command/ICommand; -> k a (Ll;)Ll;
net/minecraft/command/ICommand addTabCompletionOptions (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/command/ICommandSender;[Ljava/lang/String;Lnet/minecraft/util/BlockPos;)Ljava/util/List; -> l a (Lnet/minecraft/server/MinecraftServer;Ln;[Ljava/lang/String;Lcn;)Ljava/util/List;
net/minecraft/command/ICommand canCommandSenderUseCommand (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/command/ICommandSender;)Z -> l a (Lnet/minecraft/server/MinecraftServer;Ln;)Z
net/minecraft/command/ICommand getCommandAliases ()Ljava/util/List; -> l b ()Ljava/util/List;
net/minecraft/command/ICommand getCommandName ()Ljava/lang/String; -> l c ()Ljava/lang/String;
net/minecraft/command/ICommand getCommandUsage (Lnet/minecraft/command/ICommandSender;)Ljava/lang/String; -> l b (Ln;)Ljava/lang/String;
net/minecraft/command/ICommand isUsernameIndex ([Ljava/lang/String;I)Z -> l b ([Ljava/lang/String;I)Z
net/minecraft/command/ICommand processCommand (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/command/ICommandSender;[Ljava/lang/String;)V -> l a (Lnet/minecraft/server/MinecraftServer;Ln;[Ljava/lang/String;)V
net/minecraft/entity/Entity getFlag (I)Z -> se k (I)Z
net/minecraft/entity/Entity isSneaking ()Z -> se aM ()Z
net/minecraft/item/Item canHarvestBlock (Lnet/minecraft/block/state/IBlockState;)Z -> aeo a (Lasj;)Z
net/minecraft/item/Item getMaxDamage ()I -> aeo l ()I
net/minecraft/item/Item getMaxStackSize ()I -> aeo j ()I
net/minecraft/item/Item onBlockDestroyed (Lnet/minecraft/item/ItemStack;Lnet/minecraft/world/World;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/util/BlockPos;Lnet/minecraft/entity/EntityLivingBase;)Z -> aeo a (Laeq;Laiu;Lasj;Lcn;Lsn;)Z
net/minecraft/item/Item onItemUseFinish (Lnet/minecraft/item/ItemStack;Lnet/minecraft/world/World;Lnet/minecraft/entity/EntityLivingBase;)Lnet/minecraft/item/ItemStack; -> aeo a (Laeq;Laiu;Lsn;)Laeq;
net/minecraft/item/Item registerItem (ILjava/lang/String;Lnet/minecraft/item/Item;)V -> aeo a (ILjava/lang/String;Laeo;)V
net/minecraft/item/Item registerItem (ILnet/minecraft/util/ResourceLocation;Lnet/minecraft/item/Item;)V -> aeo a (ILkp;Laeo;)V
net/minecraft/item/Item registerItemBlock (Lnet/minecraft/block/Block;)V -> aeo b (Lakw;)V
net/minecraft/item/Item registerItemBlock (Lnet/minecraft/block/Block;Lnet/minecraft/item/Item;)V -> aeo a (Lakw;Laeo;)V
net/minecraft/item/Item registerItems ()V -> aeo t ()V
net/minecraft/item/Item setCreativeTab (Lnet/minecraft/creativetab/CreativeTabs;)Lnet/minecraft/item/Item; -> aeo a (Ladq;)Laeo;
net/minecraft/item/Item setMaxDamage (I)Lnet/minecraft/item/Item; -> aeo e (I)Laeo;
net/minecraft/item/Item setMaxStackSize (I)Lnet/minecraft/item/Item; -> aeo d (I)Laeo;
net/minecraft/item/ItemStack writeToNBT (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; -> aeq a (Ldt;)Ldt;
net/minecraft/item/ItemTool getStrVsBlock (Lnet/minecraft/item/ItemStack;Lnet/minecraft/block/state/IBlockState;)F -> adr a (Laeq;Lasj;)F
net/minecraft/nbt/NBTBase createNewByType (B)Lnet/minecraft/nbt/NBTBase; -> eh a (B)Leh;
net/minecraft/nbt/NBTBase hashCode ()I -> eh hashCode ()I
net/minecraft/nbt/NBTTagCompound getByte (Ljava/lang/String;)B -> dt f (Ljava/lang/String;)B
net/minecraft/nbt/NBTTagCompound getInteger (Ljava/lang/String;)I -> dt h (Ljava/lang/String;)I
net/minecraft/nbt/NBTTagCompound getString (Ljava/lang/String;)Ljava/lang/String; -> dt l (Ljava/lang/String;)Ljava/lang/String;
net/minecraft/nbt/NBTTagCompound getTagList (Ljava/lang/String;I)Lnet/minecraft/nbt/NBTTagList; -> dt c (Ljava/lang/String;I)Ldz;
net/minecraft/nbt/NBTTagCompound getTagType (Ljava/lang/String;)B -> dt d (Ljava/lang/String;)B
net/minecraft/nbt/NBTTagCompound hasKey (Ljava/lang/String;I)Z -> dt b (Ljava/lang/String;I)Z
net/minecraft/nbt/NBTTagCompound removeTag (Ljava/lang/String;)V -> dt q (Ljava/lang/String;)V
net/minecraft/nbt/NBTTagCompound setByte (Ljava/lang/String;B)V -> dt a (Ljava/lang/String;B)V
net/minecraft/nbt/NBTTagCompound setInteger (Ljava/lang/String;I)V -> dt a (Ljava/lang/String;I)V
net/minecraft/nbt/NBTTagCompound setString (Ljava/lang/String;Ljava/lang/String;)V -> dt a (Ljava/lang/String;Ljava/lang/String;)V
net/minecraft/nbt/NBTTagCompound setTag (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;)V -> dt a (Ljava/lang/String;Leh;)V
net/minecraft/nbt/NBTTagCompound tagCount ()I -> dt d ()I
net/minecraft/nbt/NBTTagList appendTag (Lnet/minecraft/nbt/NBTBase;)V -> dz a (Leh;)V
net/minecraft/nbt/NBTTagList getCompoundTagAt (I)Lnet/minecraft/nbt/NBTTagCompound; -> dz b (I)Ldt;
net/minecraft/nbt/NBTTagList getTagType ()I -> dz g ()I
net/minecraft/nbt/NBTTagList tagCount ()I -> dz c ()I
net/minecraft/server/MinecraftServer createNewCommandManager ()Lnet/minecraft/command/ServerCommandManager; -> net/minecraft/server/MinecraftServer i ()Lbc;
net/minecraft/server/MinecraftServer getCommandManager ()Lnet/minecraft/command/ICommandManager; -> net/minecraft/server/MinecraftServer N ()Lm;
net/minecraft/server/MinecraftServer loadAllWorlds (Ljava/lang/String;Ljava/lang/String;JLnet/minecraft/world/WorldType;Ljava/lang/String;)V -> net/minecraft/server/MinecraftServer a (Ljava/lang/String;Ljava/lang/String;JLaiz;Ljava/lang/String;)V
net/minecraft/util/IThreadListener addScheduledTask (Ljava/lang/Runnable;)Lcom/google/common/util/concurrent/ListenableFuture; -> qp a (Ljava/lang/Runnable;)Lcom/google/common/util/concurrent/ListenableFuture;
net/minecraft/util/IThreadListener isCallingFromMinecraftThread ()Z -> qp aE ()Z
net/minecraft/util/RegistryNamespaced containsKey (Ljava/lang/Object;)Z -> db d (Ljava/lang/Object;)Z
net/minecraft/util/RegistryNamespaced getIDForObject (Ljava/lang/Object;)I -> db a (Ljava/lang/Object;)I
net/minecraft/util/RegistryNamespaced getNameForObject (Ljava/lang/Object;)Ljava/lang/Object; -> db b (Ljava/lang/Object;)Ljava/lang/Object;
net/minecraft/util/RegistryNamespaced getObject (Ljava/lang/Object;)Ljava/lang/Object; -> db c (Ljava/lang/Object;)Ljava/lang/Object;
net/minecraft/util/RegistryNamespaced getObjectById (I)Ljava/lang/Object; -> db a (I)Ljava/lang/Object;
net/minecraft/util/RegistryNamespaced register (ILjava/lang/Object;Ljava/lang/Object;)V -> db a (ILjava/lang/Object;Ljava/lang/Object;)V
